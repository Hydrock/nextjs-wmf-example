// components/RemoteWidget.tsx
'use client';

import React, { useEffect, useState } from 'react';

function injectScript(url: string, scope: string): Promise<void> {
  return new Promise((resolve, reject) => {
    // eslint-disable-next-line
    // @ts-ignore
    if (window[scope]) return resolve(); // —É–∂–µ –µ—Å—Ç—å

    const existingScript = document.querySelector(`script[src="${url}"]`);
    if (existingScript) return resolve(); // —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω

    const script = document.createElement('script');
    script.src = url;
    script.type = 'text/javascript';
    script.async = true;

    script.onload = () => {
      const checkInterval = setInterval(() => {
        // eslint-disable-next-line
        // @ts-ignore
        if (window[scope]) {
          clearInterval(checkInterval);
          resolve();
        }
      }, 20);

      // –µ—Å–ª–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ‚Äî –æ—à–∏–±–∫–∞
      setTimeout(() => {
        clearInterval(checkInterval);
        reject(new Error(`üõë ${scope} –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –≤ window –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏`));
      }, 3000);
    };

    script.onerror = () => reject(new Error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}`));
    document.head.appendChild(script);
  });
}

const RemoteWidget = () => {
  const [Comp, setComp] = useState<React.ComponentType | null>(null);

  // INFO: –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ useEffect container —Ä–∞–≤–µ–Ω undefined
  // –Ω–æ –ø—Ä–∏ –≤—Ç–æ—Ä–æ–º –æ–Ω —É—Å–ø–µ–≤–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
  // –Ω–æ –≤–æ—Ç —á—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å useEffect –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ - –Ω–µ –∑–Ω–∞—é
  useEffect(() => {
    const load = async () => {
      const remoteUrl = 'http://localhost:8082/remoteEntry.js';
      const scope = 'remoteApp';
      const module = './RemoteComponent';

      await injectScript(remoteUrl, scope);

      // @ts-ignore ‚Äî Webpack runtime
      await __webpack_init_sharing__('default');

      // @ts-ignore
      const container = window[scope];
      if (!container) throw new Error(`Remote container ${scope} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ window`);

      // üîß –µ—Å–ª–∏ –Ω–µ—Ç shared, –ø–µ—Ä–µ–¥–∞–π –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
      // eslint-disable-next-line
      // @ts-ignore
      await container.init(typeof __webpack_share_scopes__ !== 'undefined'
        // eslint-disable-next-line
        // @ts-ignore
        ? __webpack_share_scopes__.default
        : {}
      );

      const factory = await container.get(module);
      const Module = factory();

      setComp(() => Module.default || Module);
    };

    load().catch(console.error);
  }, []);

  if (!Comp) return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–∂–µ—Ç–∞...</div>;
  return <Comp />;
};

export default RemoteWidget;
